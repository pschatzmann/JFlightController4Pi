package ch.pschatzmann.jflightcontroller4pi.utils;

/**
 * Data Class implemented as String
 * 
 * @author pschatzmann
 *
 */

public class DataOfString implements IData {
	private String string = new String();
	
	@Override
	public byte[] getBytes(){
		return (this.string+"\n").getBytes();
	}
	
	@Override
	public void setBytes(byte[] b){
		this.string = new String(b);
		this.string = this.string.replaceAll("(\\r|\\n)", "");
	}
	
	/**
	 * Provides the numbers which are contained in the string 
	 * @param delimiter
	 * @return
	 */
	@Override
	public double[] splitDouble(char delimiter) {
		String[] stringArray = this.string.split(String.valueOf(delimiter));
		double[] result = new double[stringArray.length];
		for (int j=0;j<result.length;j++) {
			result[j] = Double.parseDouble(stringArray[j]);
		}
		return result;
	}
	

	/**
	 * Convenience Method to return a standard java String
	 * @return
	 */
	@Override
	public String toString() {
		return string;
	}


	
	@Override
	public void append(String s) {
		string = string + s;
	}


	@Override
	public void append(double v) {
		this.append(String.valueOf(v));
	}
	
	@Override
	public boolean isEmpty() {
		return this.string.isEmpty();
	}


	/**
	 * Returns a new String (from the available strings)
	 * @return
	 */
	protected static IData instance() {
		return new DataOfString();
	}
	

	/**
	 * This is done by the garbage collector
	 */
	@Override
	public void close() {
	}

	@Override
	public int size() {
		return string.length();
	}

}
