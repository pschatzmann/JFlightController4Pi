package ch.pschatzmann.jflightcontroller4pi.devices;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ch.pschatzmann.jflightcontroller4pi.parameters.ParametersEnum;

public class DefaultInputProcessor implements IInputProcessor {
    private static final Logger log = LoggerFactory.getLogger(DefaultInputProcessor.class);
	private List<ParametersEnum> inputParameters = Collections.EMPTY_LIST;

	@Override
	public void processInput(String input) {
			String values[] = input.split(" ");
			if (values.length == inputParameters.size()) {
				for (int j = 0; j < values.length; j++) {
					if (!values[j].isEmpty()) {
						flightController.setValue(inputParameters.get(j), Double.parseDouble(values[j]));
					}
				}
			} else {
				log.warn("Input ignored: "+this.getName());
			}
		}
	
		public Collection<ParametersEnum> getInputParameters() {
			return inputParameters;
		}

		public void setInputParameters(Collection<ParametersEnum> inputParameters) {
			this.inputParameters = new ArrayList<ParametersEnum>(inputParameters);
		}

}
