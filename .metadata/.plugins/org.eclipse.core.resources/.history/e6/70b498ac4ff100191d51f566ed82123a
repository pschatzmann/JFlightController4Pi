package ch.pschatzmann.jflightcontroller4pi.modes;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ch.pschatzmann.jflightcontroller4pi.FlightController;
import ch.pschatzmann.jflightcontroller4pi.devices.IOutDeviceEx;
import ch.pschatzmann.jflightcontroller4pi.devices.IRecalculate;
import ch.pschatzmann.jflightcontroller4pi.parameters.ParametersEnum;
import ch.pschatzmann.jflightcontroller4pi.scaling.MiniPID;

/**
 * Rules for managing the flight with an autoplot
 * 
 * @author pschatzmann
 *
 */
public class AutoPilotModeRule implements IRecalculate {
	private static final Logger log = LoggerFactory.getLogger(AutoPilotModeRule.class);
	private FlightController flightController;
	private MiniPID miniPID;

	public AutoPilotModeRule(){		
	}
	public AutoPilotModeRule(FlightController flightController){	
		this.flightController = flightController;
	}

	@Override
	public IOutDeviceEx getDevice() {
		return null;
	}

	@Override
	public void recalculate() {
//		// speed is already set my autopilot
//		// handle direction with aileron
//		double directionTarget = flightController.getValue(ParametersEnum.AUTODIRECTION).value;
//		double directionEff = flightController.getValue(ParametersEnum.SENSORDIRECTION).value;
		
		// handle height with Elevator
		double altitudeTarget = flightController.getValue(ParametersEnum.AUTOALTITUDE).value;
		double altitudeEff = flightController.getValue(ParametersEnum.SENSORALTITUDE).value;
		
		// current elevator value
		double elevtorValue = flightController.getValue(ParametersEnum.ELEVETOR).value;
		

		
		double newAltitude = miniPID.getOutput(altitudeEff, altitudeTarget);
		
		// correct elevator
		flightController.setValue(ParametersEnum.ELEVETOR, elevtorValue);

	}

	public FlightController getFlightController() {
		return flightController;
	}

	public void setFlightController(FlightController flightController) {
		this.flightController = flightController;
	}

	public MiniPID getMiniPID() {
		return miniPID;
	}

	public void setMiniPID(MiniPID miniPID) {
		this.miniPID = miniPID;
	}

}
